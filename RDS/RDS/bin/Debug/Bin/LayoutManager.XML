<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LayoutManager</name>
    </assembly>
    <members>
        <member name="T:Sias.LayoutManager.SLayoutManager">
            <summary>
            Layout manager class
            
            The LayoutManager is responsible for loading and storing layouts and layout models
            for the rest of the framework.
            To edit the data of the LayoutManager use the Layout Editor application.
            </summary>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.GetErrorInfos">
            <summary>
            This interface function returns the default error messages which can be 
            generated by this device.
            </summary>
            <returns>A collection with error information</returns>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.manager">
            <summary>The one and only device manager instance</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.dbManager">
            <summary>Database manager for db access</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.currentLayout">
            <summary>The current layout</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.error">
            <summary>Error status of the manager</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.classLock">
            <summary>class lock</summary>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.GetManager">
            <summary>
            Instantiator/Factory method
            
            This static method gets the one and only layout manager. 
            If no layout manager is available yet, a new layout manager instance will get created.
            </summary>
            <returns>The one and only layout manager</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.IsFileName(System.String)">
            <summary>
            Check if the given layout component name has to be loaded from layout 
            or from db
            </summary>
            <param name="name">layout component name</param>
            <returns>True if name has to be loaded from file, otherwise false.</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.LoadPath(System.String,System.String)">
            <summary>
            create a full file path from given file name
            </summary>
            <param name="FileName">The file name</param>
            <param name="AddInfo">additional extension</param>
            <returns>A full path to the file</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.SavePath(System.String,System.String)">
            <summary>
            create a full file path from given file name
            </summary>
            <param name="FileName">The file name</param>
            <param name="AddInfo">additional extension</param>
            <returns>A full path to the file</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.DoOverwrite(System.String,System.String,Sias.Core.SSaveOptions)">
            <summary>
            This methods checks whether the specified object is allowed to get overwritten or not.
            </summary>
            <param name="aKind">The kind (type) of object to overwrite (File, layout, item, ...)</param>
            <param name="aName">The name (identification) of the object to overwrite</param>
            <param name="options">The used save option parameter</param>
            <returns>True if overwriting if allowed, otherwise false</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.LoadLayout(System.String)">
            <summary>
            Load a layout either from file or from database
            
            If the given name is a filename (ending with xml or binary extension)
            the layout gets loaded from a file, else it gets loaded from layout DB.
            </summary>
            <remarks>
            The loaded layout overwrites the SLayoutManager.CurrentLayout property!
            </remarks>
            <param name="layoutName">Name of the layout to load</param>
            <returns>The selected layout or null if not found</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.SaveLayout(System.String,Sias.Core.Interfaces.ILayout,Sias.Core.SSaveOptions)">
            <summary>
            Saves a given layout under a given name into the DB or under a given filename into a file.
            </summary>
            <param name="nameOrPath">The name of the layout optionally including a full file path</param>
            <param name="layout">The layout object to save</param>
            <param name="options">The save options</param>
            <returns>true if layout has been stored, otherwise false</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.LoadModel(System.String,System.Type,System.String)">
            <summary>
            Load a Model either from file or from database
            If the given type name is a filename (ending with xml or binary extension)
            the Model gets loaded from a file, else it gets loaded from layout DB.
            </summary>
            <param name="ModelTypeName">Name of the Model type to load</param>
            <param name="ClassType">
            The type of the model to load. Possible values are typeof(DeckTray), 
            typeof(Device), typeof(IItem), typeof(Item) and typeof(Worktable).
            </param>
            <param name="ModelName">The name the loaded Model should be</param>
            <returns>The loaded Model or null if the Model type can't be found</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.SaveModel(System.String,Sias.Layout.Model,Sias.Core.SSaveOptions)">
            <summary>
            Saves a given model under a given name into the DB or under a given filename into a file.
            </summary>
            <param name="nameOrPath">The name of the model optionally including a full file path</param>
            <param name="MyModel">The model object to save</param>
            <param name="options">The save options</param>
            <returns>true if model has been stored, otherwise false</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.LoadItem(System.String,System.String)">
            <summary>
            Load a Item either from file or from database
            
            If the given type name is a filename (ending with xml or binary extension)
            the Item gets loaded from a file, else it gets loaded from layout DB.
            </summary>
            <param name="ItemTypeName">Name of the item type to load</param>
            <param name="ItemName">The name the loaded item should be</param>
            <returns>The loaded Item or null if the item type can't be found</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.LoadDecktray(System.String,System.String)">
            <summary>
            Load a Decktray either from file or from database
            
            If the given type name is a filename (ending with xml or binary extension)
            the Decktray gets loaded from a file, else it gets loaded from layout DB.
            </summary>
            <param name="DecktrayTypeName">Name of the Decktray type to load</param>
            <param name="DecktrayName">The name the loaded Decktray should be</param>
            <returns>The loaded Decktray or null if the Decktray type can't be found</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.LoadDevice(System.String,System.String)">
            <summary>
            Load a Device either from file or from database.
            If the given type name is a filename (ending with xml or binary extension)
            the Item gets loaded from a file, else it gets loaded from layout DB. \n
            
            Important: As the device is loaded only as a model you have to take care 
            about the layout properties. This properties have to be connected to the 
            layout before you can use the device.
            </summary>
            <param name="DeviceTypeName">Name of the item type to load</param>
            <param name="DeviceName">The name the loaded item should be</param>
            <returns>The loaded device or null if the item type can't be found</returns>
        </member>
        <member name="M:Sias.LayoutManager.SLayoutManager.GetLayoutList(System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="P:Sias.LayoutManager.SLayoutManager.CurrentLayout">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sias.LayoutManager.SLayoutManager.Error">
            <summary>Error status of the manager</summary>
        </member>
        <member name="T:Sias.LayoutManager.SLayoutManager.ErrorCodes">
            <summary>
            This static class keeps the error code constants of the \ref Sias::LayoutManager::SLayoutManager errors.
            </summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.NoError">
            <summary>0x0000: No error occurred</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.NoLayoutData">
            <summary>0x0001: No layout data available</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.UnableToLoadLayoutData">
            <summary>0x0002: Layout data could not be loaded</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.UnableToSaveLayoutData">
            <summary>0x0003: Layout data could not be saved</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.NoModelData">
            <summary>0x0010: Model data not available</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.UnableToLoadModelData">
            <summary>0x0020: Unable to load model data</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.UnableToSaveModelData">
            <summary>0x0030: Unable to save model data</summary>
        </member>
        <member name="F:Sias.LayoutManager.SLayoutManager.ErrorCodes.NotSupportedModelType">
            <summary>0x0040: Model type not supported</summary>
        </member>
        <member name="T:Sias.LayoutManager.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sias.LayoutManager.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sias.LayoutManager.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
