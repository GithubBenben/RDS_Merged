<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dev_HeatPos</name>
    </assembly>
    <members>
        <member name="T:Sias.HeatPos.SHeatPosDevice">
            <summary>
            Heated positions device
            
            The Heated positions device is a single device representing exactly one logical 
            module on a sias instrument. 
            </summary>
            <details>
            \ingroup	Dev_HeatPos
            
            The device includes the following methods and properties
             - configuration properties
               - Temp: The default temperature of the heated position device
               - Limit: The default temperature limit of the heated position device
               .
             - layout properties
               - an array of heated slots
               - an array of cover items
               - an array of cover park slots
               - an array of cover close slots
               .
             - methods for getting/setting temperature
             - methods and properties for the cover and slot management
             - methods for device visualization (not finished yet)
             - methods for getting/setting the access modes
             .
            
            <div class="dynheader">%SHeatPosDevice class diagram</div>
            <div class="dynsection">
            \image html "SHeatposDevice.png"
            </div>
            
            </details>
            TODO: Implement and document access mode dependent device display modes (Visualizations)
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._Temp">
            <summary>Default temperature field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._Limit">
            <summary>Default temperature limit field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._Slot">
            <summary>Slot array field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._Cover">
            <summary>Slot cover array field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._ParkCoverSlot">
            <summary>Cover park slot array field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._CloseCoverSlot">
            <summary>Cover close slot array field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._MaxSlot">
            <summary>Number of temperature slots field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._MaxCover">
            <summary>Maximum number of covers field</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._AccessMode">
            <summary>internal access modes for the heated positions</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice._HandlingMethods">
            <summary>gripper arm buffer</summary>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.#ctor">
            <summary>
            Default constructor
            
            This constructor creates a device with all configuration members to 
            its default values.
            </summary>		
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.#ctor(System.String)">
            <summary>
            XML string configuration constructor
            
            This constructor creates a device by parsing the device parameters from 
            the given XML configuration string.
            </summary>
            <param name="Config">XML configuration string</param>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.#ctor(System.Int16,System.Double,System.Double)">
            <summary>
            Manual generation constructor
            
            This constructor creates a device by using the given parameters.
            </summary>
            <param name="Adr">Address of heated position device</param>
            <param name="Temp">Default temperature</param>
            <param name="Limit">Default temperature limit</param>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.GetErrorInfos">
            <summary>
            This interface function returns the default error messages which can be
            generated by this device.
            </summary>
            <returns>A collection with error information</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.HandleModuleError(System.Boolean,System.Object[])">
            <summary>
            This method handles the module errors of SHeatPos devices 
            </summary>
            <details>
            Possible Module types:
            -	0xFFE1 (\ref Sias::CanDev::eMODULE_TYPE_CONST "MT_BASE_540")
            .
             
            Handled errors: 
            -	0x10 (\ref Sias::CanDev::eMODULE_ERROR_CONST "ME_RANGE_ERROR")	at Error1
            -	0x45 (\ref Sias::CanDev::eMODULE_ERROR_CONST "ME_MSWITCH_ERR1")	at Error2
            -	0x46 (\ref Sias::CanDev::eMODULE_ERROR_CONST "ME_MSWITCH_ERR2")	at Error2
            -	0x47 (\ref Sias::CanDev::eMODULE_ERROR_CONST "ME_SENSOR_ERROR")	at Error2
            .
            </details>
            <param name="ForceHandling">True if force error handling, false if not</param>
            <param name="AddInfo">Additional error information</param>
            <returns>Result of the error handling.</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.TempToModule(System.Double)">
            <summary>
            Convert real temperature [°C] to module temperature value [1/10 °C]
            </summary>
            <param name="temp">Real temperature [°C]</param>
            <returns>Module temperature value [1/10 °C]</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.TempFromModule(System.Int16)">
            <summary>
            Convert Module temperature [1/10 °C] to real temperature [°C]
            </summary>
            <param name="temp">Module temperature value [1/10 °C]</param>
            <returns>Real temperature [°C]</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.FindObject(System.Object,System.Array)">
            <summary>
            Search for given <paramref name="Obj"/> in given array
            </summary>
            <param name="Obj">The object to check</param>
            <param name="Arr">The array to search in</param>
            <returns>True if the object is found, otherwise false.</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.GetSlotIndex(System.Object)">
            <summary>
            Get slot index
            This method calculates the index of the heated position slots. 
            Depending on the slot type the index will be masked:
             - <b>no mask:</b> if the passed object is one of the heated positions plate slots
             - <b>IsParkSlotMask:</b> if the passed object is one of the heated positions cover
               park slots
             - <b>IsCloseSlotMask:</b> if the passed object is one of the heated positions cover
               close slots
             - <b>IsCoverItemMask:</b> if the passed object is one of the heated positions cover
               item slots
             .
            If the object is no slot of the heated position device the method returns -1.
            </summary>
            <param name="Obj">The object to check</param>
            <returns>Index of the slot or -1 if not found.</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.SetTemperaturesOfAllChannels(System.Double)">
            <summary>
            Set new temperature for all channels
            </summary>
            <param name="NewTemp">New temperature [°C]</param>
            <remarks>The device gets locked/unlocked in this method. Timeout: MessageLockTimeout</remarks>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.GetMeanRealTemperature">
            <summary>
            Get current temperature from heated position device.
            
            If the device has more than one channel, this temperature depends on the
            hardware modules. It can be the mean of the channels or also the temperature of 
            the first channel.
            </summary>
            <returns>Actual temperature [°C]</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.GetMeanTargetTemperature">
            <summary>
            Get target temperature from given device.
            
            In case of the device has more then one channel this temperature is typically 
            the target temperature of the first channel.
            </summary>
            <returns>Target temperature [°C]</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.SetTemperature(System.Int32,System.Double)">
            <summary>
            Set new temperature for given channel
            </summary>
            <param name="Channel">Heated position channel index (0..MaxSlot)</param>
            <param name="NewTemp">New temperature [°C]</param>
            <remarks>The device gets locked/unlocked in this method. Timeout: MessageLockTimeout</remarks>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.GetRealTemperature(System.Int32)">
            <summary>
            Get current temperature from given channel
            </summary>
            <param name="Channel">Heated position channel index (0..MaxSlot)</param>
            <returns>Actual temperature [°C]</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.GetTargetTemperature(System.Int32)">
            <summary>
            Get target temperature from given channel
            </summary>
            <param name="Channel">Heated position channel index (0..MaxSlot)</param>
            <returns>Target temperature [°C]</returns>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice.ActualLayoutDevice">
            <summary>Actual layout device. E.g. for sending the display state to layout</summary>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.AttachLayoutData(Sias.Core.Interfaces.ILayoutDevice)">
            <summary>
            Attach layout data. 
            
            This method tries to attach the layout data found at the given layout device 
            to the device. If this succeeds, it returns true. If it fails, it returns false.
            In this case the calling method should retry until it finds a fitting layout 
            device.
            </summary>
            <param name="LayoutDevice">The layout device to attach or null to unattach an attached layout device.</param>
            <returns>True if attachable, false if not</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.GetAccessMode(System.Object)">
            <summary>
            Get access mode.
            
            This Method is used to request the actual access mode. 
            </summary>
            <param name="CallerObject">The caller object</param>
            <returns>Access mode for the given caller object</returns>
        </member>
        <member name="M:Sias.HeatPos.SHeatPosDevice.SetAccessMode(System.Object,Sias.Core.Interfaces.SAccessMode,System.Int32)">
            <summary>
            Set access mode.
            
            This method prepares the heating position module to allow the requested access.
            </summary>
            <param name="CallerObject">The object calling the method</param>
            <param name="NewAccessMode">Requested access mode</param>
            <param name="TimeOut">Allowed timeout</param>
            <returns>The resulted access mode</returns>
            <remarks>The device may get locked/unlocked in this method.</remarks>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.Temp">
            <summary>Default temperature property</summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.Limit">
            <summary>
            Default temperature limit property
            
            The temperature limit defines the allowed temperature deviation. Typically values
            are 0.5°C or 1°C.
            </summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.Slot">
            <summary>
            Slot array property
            
            This layout property defines the list of slots of the heated position device. 
            It will only be valid, if a layout is attached (\b see \ref AttachLayoutData).
            </summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.Cover">
            <summary>
            Slot cover array property
            
            This layout property defines the list of covers of the heated position device. 
            Each cover corresponds with exactly one slot and one park slot.
            It will only be valid, if a layout is attached (\b see \ref AttachLayoutData).
            </summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.ParkCoverSlot">
            <summary>
            Cover park slot array property
            
            This layout property defines the list of cover park slots for the heated 
            position device covers.  Each cover park slot corresponds with exactly one 
            cover.
            The property will only be valid, if a layout is attached (\b see \ref AttachLayoutData).
            </summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.CloseCoverSlot">
            <summary>
            Cover close slot array property
            
            This layout property defines the list of cover close slots for the heated 
            position device covers.  Each cover close slot corresponds with exactly one 
            cover.
            The property will only be valid, if a layout is attached (\b see \ref AttachLayoutData).
            </summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.MaxSlot">
            <summary>Number of temperature slots property</summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.MaxCover">
            <summary>Maximum number of covers property</summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.RequestedAccessMode">
            <summary>
            access modes for the heated positions
            </summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.HandlingMethods">
            <summary>
            Get/Set the gripper arm used for cover transfers
            
            This property defines the gripper arm which is used for transferring the covers
            of the heating position device. If it will not be defined by the application, it
            will try to find it at the connected robot.
            </summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.LayoutDisplayMode">
            <summary>Get/Set dAddress of Heated position device visualization mode</summary>
        </member>
        <member name="P:Sias.HeatPos.SHeatPosDevice.LayoutDisplayModeString">
            <summary>Get/Set Device visualization mode</summary>
            <value></value>
        </member>
        <member name="T:Sias.HeatPos.SHeatPosDevice.ErrorCodes">
            <summary>
            This static class keeps the error code constants of the \ref Sias::HeatPos::SHeatPosDevice errors.
            </summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice.ErrorCodes.ParameterRangeError">
            <summary> 0x1310: Parameter Range error</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice.ErrorCodes.InvalidRS232Mode">
            <summary> 0x1390: Invalid RS232 command mode </summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice.ErrorCodes.SecurityCondition1Error">
            <summary> 0x1345: A regulator turned off because the first security condition gets activated</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice.ErrorCodes.SecurityCondition2Error">
            <summary> 0x1346: A regulator turned off because the second security condition gets activated</summary>
        </member>
        <member name="F:Sias.HeatPos.SHeatPosDevice.ErrorCodes.RegulatorInputError">
            <summary> 0x1347: A regulator turned off because a regulator input error.
            One of the regulator input ports reported an error.</summary>
        </member>
    </members>
</doc>
