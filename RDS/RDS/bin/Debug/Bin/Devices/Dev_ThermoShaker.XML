<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dev_ThermoShaker</name>
    </assembly>
    <members>
        <member name="T:Sias.ThermoShaker.SThermoShakerDevice">
            <summary>
            Thermo shaker device
            
            The thermo shaker device is an \ref AccessibleDevices "accessible device" representing 
            exactly one sias thermo shaker module on a sias instrument. 
            </summary>
            <details>
            \ingroup	Dev_ThermoShaker
            
            In addition to a standard shaker the interface includes 
             - configuration properties for default temperature and default temperature limit.
             - Methods for accessing the thermo shaker latch.
             - Methods for setting and reading the thermo shaker temperature(s).
             .
            The IAccessableDevice members are adapted to control the thermo shaker latch.
            
            <div class="dynheader">%SThermoShakerDevice class diagram</div>
            <div class="dynsection">
            \image html "SThermoShakerDevice.png"
            </div>
            
            </details>
            <remarks>
            Important:  The thermo shaker devices expects the latch gets automatically closed in 
                        case of a start time move command is started. If the connected shaker module
                        does not automatically close the latch it is needed to be done by the
                        application.
            </remarks>
        </member>
        <member name="F:Sias.ThermoShaker.SThermoShakerDevice._Temp">
            <summary>Default temperature field</summary>
        </member>
        <member name="F:Sias.ThermoShaker.SThermoShakerDevice._Limit">
            <summary>Default temperature limit field</summary>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.#ctor(System.String)">
            <summary>
            Constructor with XML configuration string parameter
            </summary>
            <param name="Config">XML Configuration string</param>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.#ctor(System.Int16,System.Int16,System.UInt16,Sias.Shaker.SShakerDevice.ShakeMode,System.Int16,System.Double,System.Double)">
            <summary>
            Manual generation constructor.
            This constructor creates a device by using the given parameters.
            </summary>
            <param name="Adr">Address of motor module</param>
            <param name="Speed">Default move speed [RPM]</param>
            <param name="Ramp">Default acceleration [RPM/s]</param>
            <param name="Mode">Default shake mode</param>
            <param name="MaxSlot">Maximum number of slots for this thermo shaker</param>
            <param name="Temp">Default temperature</param>
            <param name="Limit">Default temperature limit</param>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.GetErrorInfos">
            <summary>
            This interface function returns the default error messages which can be 
            generated by this device.
            </summary>
            <returns>A collection with error information</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.HandleModuleError(System.Boolean,System.Object[])">
            <summary>
            This method handles the module errors of SThermoShaker devices 
            
            This is not finally finished, as the final thermo shaker errors are not completely 
            defined yet. However the error go handled by the base classes.
            </summary>
            <details>
            Possible Module types:
            	- 0x0040 (\ref Sias::CanDev::eMODULE_TYPE_CONST "MT_SHAKER")
            	.
            Handled errors: 
            	- none
            	.
            </details>
            <param name="ForceHandling">true if force error handling, false if not</param>
            <param name="AddInfo">additional error information</param>
            <returns>Result of the error handling.</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.TempToModule(System.Double)">
            <summary>
            Convert real temperature [°C] to module temperature value [1/10 °C]
            </summary>
            <param name="temp">Real temperature [°C]</param>
            <returns>Module temperature value [1/10 °C]</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.TempFromModule(System.Int16)">
            <summary>
            Convert Module temperature [1/10 °C] to real temperature [°C]
            </summary>
            <param name="temp">Module temperature value [1/10 °C]</param>
            <returns>Real temperature [°C]</returns>
        </member>
        <member name="F:Sias.ThermoShaker.SThermoShakerDevice._Gates">
            <summary>Gate map based on last Gate access command (CloseCover/OpenCover*)</summary>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.GateMap(System.Int32)">
            <summary>
            Calculate gate map from slot index.
            </summary>
            <param name="SlotInx">Slot index</param>
            <returns>Gate map for the defined park index</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.IsSlotAccessible(System.Int32)">
            <summary>
            Calculate whether a slot is accessible or not.
            
            Returns is a slot is accessible based on the slot index and the 
            gate map. <b>Take care:</b> This is only working, if the covers will be opened and 
            closed using the thermo shaker AllowAccessToSlot/DenyAccessToSlot members. 
            </summary>
            <param name="SlotInx">Slot index</param>
            <returns>TRUE if the slot is accessible else false</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.AllowAccessToSlot(System.Int32)">
            <summary>
            Allow access to the defined slot.
            </summary>
            <param name="SlotInx">Slot index</param>
            <remarks>The device gets locked/unlocked in this method. Timeout: ActionLockTimeout</remarks>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.DenyAccessToSlot(System.Int32)">
            <summary>
            Deny access for the defined slot.
            </summary>
            <param name="SlotInx">Index of the slot</param>
            <remarks>The device gets locked/unlocked in this method. Timeout: ActionLockTimeout</remarks>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.StartTimeMove(System.UInt16,Sias.Shaker.SShakerDevice.ShakeMode,System.Int16,System.UInt16)">
            <summary>
            Start shake (time move) command.
            
            This command starts the shaker for a given time.\n
            The shaker gets active until the given speed is reached. After this the shaker 
            gets inactive while the moving flag remains set. In general the shaker gets active 
            again for deceleration.
            </summary>
            <param name="Time_s">Shake time in seconds</param>
            <param name="ShakeMode">Shake mode</param>
            <param name="ShakeSpeed">Shake speed [RPM]</param>
            <param name="ShakeRamp">Shake ramp [RPM/s]</param>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.SetTemperaturesOfAllChannels(System.Double)">
            <summary>
            Set new temperature for all channels
            </summary>
            <param name="NewTemp">New temperature [°C]</param>
            <remarks>The device gets locked/unlocked in this method. Timeout: MessageLockTimeout</remarks>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.GetMeanRealTemperature">
            <summary>
            Get current temperature from heated position device.
            
            If the device has more than one channel, this temperature depends on the
            hardware modules. It can be the mean of the channels or also the temperature of 
            the first channel.
            </summary>
            <returns>Actual temperature [°C]</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.GetMeanTargetTemperature">
            <summary>
            Get target temperature from given device.
            
            In case of the device has more then one channel this temperature is typically 
            the target temperature of the first channel.
            </summary>
            <returns>Target temperature [°C]</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.SetTemperature(System.Int32,System.Double)">
            <summary>
            Set new temperature for given channel
            </summary>
            <param name="Channel">Heated position channel index (0..MaxSlot)</param>
            <param name="NewTemp">New temperature [°C]</param>
            <remarks>The device gets locked/unlocked in this method. Timeout: MessageLockTimeout</remarks>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.GetRealTemperature(System.Int32)">
            <summary>
            Get current temperature from given channel
            </summary>
            <param name="Channel">Heated position channel index (0..MaxSlot)</param>
            <returns>Actual temperature [°C]</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.GetTargetTemperature(System.Int32)">
            <summary>
            Get target temperature from given channel
            </summary>
            <param name="Channel">Heated position channel index (0..MaxSlot)</param>
            <returns>Target temperature [°C]</returns>
        </member>
        <member name="M:Sias.ThermoShaker.SThermoShakerDevice.SetAccessMode(System.Object,Sias.Core.Interfaces.SAccessMode,System.Int32)">
            <summary>
            Set access mode.
            
            This method prepares the thermo shaker module to allow the requested access.
            </summary>
            <param name="CallerObject">The object calling the method</param>
            <param name="AccessMode">Requested access mode</param>
            <param name="TimeOut">Allowed timeout</param>
            <returns>The resulted access mode</returns>
            <remarks>
            <b>Remarks:</b>
             - If the timeout is longer than the remaining thermo shaker time the function will 
               not wait for the finished timeout. It will return inaccessible immediately
            </remarks>		
        </member>
        <member name="P:Sias.ThermoShaker.SThermoShakerDevice.Temp">
            <summary>Default temperature property</summary>
        </member>
        <member name="P:Sias.ThermoShaker.SThermoShakerDevice.Limit">
            <summary>
            Default temperature limit property
            
            The temperature limit defines the allowed temperature deviation. Typically values
            are 0.5°C or 1°C.
            </summary>
        </member>
        <member name="T:Sias.ThermoShaker.SThermoShakerDevice.ErrorCodes">
            <summary>
            This static class keeps the error code constants of the \ref Sias::ThermoShaker::SThermoShakerDevice errors.
            
            Actually there are no thermo shaker device errors supported
            </summary>
        </member>
    </members>
</doc>
