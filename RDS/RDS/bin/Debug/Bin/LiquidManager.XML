<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiquidManager</name>
    </assembly>
    <members>
        <member name="T:Sias.LiquidManager.SLiquidImages">
            <summary>liquid mage index constants</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Yellow">
            <summary>Yellow</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Orange">
            <summary>Orange</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Red">
            <summary>Red</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Violet">
            <summary>Violet</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.DarkBlue">
            <summary>DarkBlue</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Blue">
            <summary>Blue</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Green">
            <summary>Green</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.DarkGreen">
            <summary>DarkGreen</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Black">
            <summary>Black</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidImages.Grey">
            <summary>Grey</summary>
        </member>
        <member name="T:Sias.LiquidManager.STipImages">
            <summary>Tip image index constants</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipImages.Washable">
            <summary>Washable</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipImages.Small">
            <summary>Small</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipImages.Medium">
            <summary>Medium</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipImages.Large">
            <summary>Large</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipImages.Huge">
            <summary>Huge</summary>
        </member>
        <member name="T:Sias.LiquidManager.SConsistencyErrors">
            <summary>
            liquid class consistency errors
            </summary>
        </member>
        <member name="F:Sias.LiquidManager.SConsistencyErrors.NoInconsistency">
            <summary>No Inconsistency</summary>
        </member>
        <member name="F:Sias.LiquidManager.SConsistencyErrors.DuplicateLiquidName">
            <summary>Duplicate Liquid Name</summary>
        </member>
        <member name="F:Sias.LiquidManager.SConsistencyErrors.DuplicateCategoryName">
            <summary>Duplicate Category Name</summary>
        </member>
        <member name="F:Sias.LiquidManager.SConsistencyErrors.DuplicateTipType">
            <summary>Duplicate Tip Type</summary>
        </member>
        <member name="F:Sias.LiquidManager.SConsistencyErrors.OverlappingVolumeBands">
            <summary>Overlapping Volume Bands</summary>
        </member>
        <member name="F:Sias.LiquidManager.SConsistencyErrors.VolumeBandLowerLimitTooSmall">
            <summary>Volume Band Lower Limit Too Small</summary>
        </member>
        <member name="F:Sias.LiquidManager.SConsistencyErrors.VolumeBandUpperLimitTooLarge">
            <summary>Volume Band Upper Limit Too Large</summary>
        </member>
        <member name="T:Sias.LiquidManager.SLiquidManager">
            <summary>
            The LiquidManager is responsible for loading and storing liquid data
            for the rest of the framework. It also provides an editor dialog to manipulate the 
            liquid data.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetErrorInfos">
            <summary>
            This interface function returns the default error messages which can be 
            generated by this device.
            </summary>
            <returns>A collection with error information</returns>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.error">
            <summary>Error status of the manager</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.TipImageOffset">
            <summary>tip image offset (for liquid class control/editor)</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.LiquidImageOffset">
            <summary>liquid image offset (for liquid class control/editor)</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.consistencyError">
            <summary>Value of the last consistency check error</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.inconsistentObject">
            <summary>Object that caused the last consistency check to fail</summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.InconsistencyWasDetected(System.Object,Sias.LiquidManager.InconsistencyDetectedEventArgs)">
            <summary>
            Handles LiquidClassChanged events that are sent by a SLiquidClassControl to
            reflect the changes in the liquid class tree.
            </summary>
            <param name="sender">The object sending the event</param>
            <param name="e">The Inconsistency Detected Event Arguments</param>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.liquidClasses">
            <summary>Liquid classes field</summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.#ctor">
            <summary>
            Creates a new SLiquidManager object
            </summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.manager">
            <summary>the one and only liquid manager</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager._classLock">
            <summary>Lock object, used to synchronize calls in a multi threading environment</summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetManager">
            <summary>
            Instantiator/Factory method
            
            This static method gets the one and only liquid manager. 
            If no liquid manager is available yet, a new liquid manager instance will get created.
            </summary>
            <returns>The one and only liquid manager</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.AddLiquidImage(System.String)">
            <summary>
            Add an internal resource to liquid image list
            </summary>
            <param name="resourcename">resource name</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.AddTipImage(System.String)">
            <summary>
            Add an internal resource to tip image list
            </summary>
            <param name="resourcename">resource name</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.IsFileName(System.String)">
            <summary>
            Check if the given liquid name has to be loaded from file or from db
            </summary>
            <param name="name">layout component name</param>
            <returns>True if name has to be loaded from file, otherwise false.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.LoadPath(System.String)">
            <summary>
            create a full load path from given file name
            </summary>
            <param name="FileName">The file name</param>
            <returns>A full path to the file</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.SavePath(System.String)">
            <summary>
            create a full save path from given file name
            </summary>
            <param name="FileName">The file name</param>
            <returns>A full path to the file</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.DoOverwrite(System.String,System.String,Sias.Core.SSaveOptions)">
            <summary>
            return true if and existing object is allowed to be overwritten or not.
            </summary>
            <param name="aKind">The type of the object (File, Liquid)</param>
            <param name="aName">The Name of the object</param>
            <param name="options">The save options</param>
            <returns>True if allowed to overwrite otherwise false</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.Load(System.String)">
            <summary>
            Load liquid classes
            
            This method loads a set of liquid classes from database or from a file.
            If the given name is a file name (recognized either by an appended ".xml"
            or by a leading file path) the liquid classes get loaded from the file. 
            Otherwise the liquid classes get loaded from db. \n
            \b IMPORTANT: All origin liquid classes get removed!
            </summary>
            <param name="filename">liquid classes file name</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.Load">
            <summary>load default liquid classes</summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.Save(System.String,Sias.Core.SSaveOptions)">
            <summary>
            Save liquid data to file or database
            </summary>
            <param name="filename">The name of the file to store</param>
            <param name="options">The save options</param>
            <returns>true is successfully saved, otherwise false</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.Save(System.String)">
            <summary>
            store liquid classes at default location (with overwriting)
            </summary>
            <param name="filename">The name of the file to store</param>
            <returns>true is successfully saved, otherwise false</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.Save">
            <summary>
            store liquid classes at default location (with overwriting)
            </summary>
            <returns>true is successfully saved, otherwise false</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.Edit(System.Boolean)">
            <summary>
            Display the default liquid class editor dialog.
            </summary>
            <param name="modal">Determines whether the editor dialog should be a modal dialog or a LiqMan_modeless one.</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.Edit">
            <summary>
            Display the default liquid class editor dialog.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.RegisterInconsistencyEvent(Sias.LiquidManager.SLiquidClassBase)">
            <summary>
            
            </summary>
            <param name="lcBase"></param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetLiquidClass(System.String)">
            <summary>
            Get the liquid class with the given name
            </summary>
            <param name="ClassName">The name of the requested liquid class</param>
            <returns>The requested liquid class or null if not available</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetLiquidCategory(System.String,System.String)">
            <summary>
            Get the liquid category with the given name
            </summary>
            <param name="ClassName">The name of the requested liquid class</param>
            <param name="CategoryName">The name of the requested liquid category</param>
            <returns>The liquid category with the given name or null if the category does not exist</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetTipTypeData(System.String,System.String,System.String)">
            <summary>
            Get the tip type data with the given name
            </summary>
            <param name="ClassName">The name of the requested liquid class</param>
            <param name="CategoryName">The name of the requested liquid category</param>
            <param name="TipTypeName">The name of the requested tip type data</param>
            <returns>The requested tip type data or null if not available</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetVolumeBand(System.String,System.String,System.String,System.Double)">
            <summary>
            Get the tip type data with the given name
            </summary>
            <param name="ClassName">The name of the requested liquid class</param>
            <param name="CategoryName">The name of the requested liquid category</param>
            <param name="TipTypeName">The name of the requested tip type data</param>
            <param name="Volume">The requested volume</param>
            <returns>The requested tip type data or null if not available</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetAspirateParameters(System.String,System.String,System.String,System.Double)">
            <summary>
            Get the tip type data with the given name
            </summary>
            <param name="ClassName">The name of the requested liquid class</param>
            <param name="CategoryName">The name of the requested liquid category</param>
            <param name="TipTypeName">The name of the requested tip type data</param>
            <param name="Volume">The requested volume</param>
            <returns>The requested tip type data or null if not available</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.GetDispenseParameters(System.String,System.String,System.String,System.Double)">
            <summary>
            Get the tip type data with the given name
            </summary>
            <param name="ClassName">The name of the requested liquid class</param>
            <param name="CategoryName">The name of the requested liquid category</param>
            <param name="TipTypeName">The name of the requested tip type data</param>
            <param name="Volume">The requested volume</param>
            <returns>The requested tip type data or null if not available</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.OldGetLiquidClass(System.String)">
            <summary>
            Returns the SLiquidClass object with a given name
            </summary>
            <param name="name">The name of the requested liquid class</param>
            <returns>The SLiquidClass object corresponding to the given name or null if no class available</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidManager.OldGetLiquidClasses">
            <summary>
            Returns a collection of all SLiquidClass objects in the database
            </summary>
            <returns>SLiquidClassCollection containing all liquid classes in the database</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.LiquidClasses">
            <summary>Liquid classes property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.ImageList">
            <summary>Get/Set the ImageList of the SLiquidManager</summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.LiquidImageList">
            <summary>Get/Set the LiquidImageList of the SLiquidManager</summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.TipImageList">
            <summary>Get/Set the TipImageList of the SLiquidManager</summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.LastConsistencyError">
            <summary>
            Gets the result of the last consistency check of the liquid 
            classes hierarchy
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.LastInconsistencyObject">
            <summary>
            Gets the LastInconsistencyObject of the SLiquidManager
            
            Object that cause the last consistency check of the liquid classes hierarchy
            to fail. If the last consistency check did not fail, the object will be null.
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.Error">
            <summary>Error status of the manager</summary>
            <value></value>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.DataAvailable">
            <summary>
            Returns true, if the liquid manager contains at least one liquid class.
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.DefaultLiquidFile">
            <summary>  
            Gets the DefaultLiquidName of the SLiquidManager managed by SConfigurationManager
            To use the database any name without extension or leading path can be used.
            </summary>
            <details>
            </details>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidManager.DBPrefix">
            <summary>
            Gets the DeviceDBPrefix of the SDeviceManager
            </summary>
        </member>
        <member name="T:Sias.LiquidManager.SLiquidManager.ErrorCodes">
            <summary>
            This static class keeps the error code constants of the \ref Sias::LiquidManager::SLiquidManager errors.
            </summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.ErrorCodes.NoError">
            <summary>0x0000: No error occurred</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.ErrorCodes.NoLiquidData">
            <summary>0x0001: No liquid data available</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.ErrorCodes.UnableToLoadLiquidData">
            <summary>0x0004: Liquid data could not be loaded</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidManager.ErrorCodes.UnableToSaveLiquidData">
            <summary>0x0008: Liquid data could not be saved</summary>
        </member>
        <member name="T:Sias.LiquidManager.SLiquidClassBase">
            <summary>
            The SLiquidClassBase object builds the base class for all liquid class objects in the
            Nelson environment. It is only an abstract base class to prevent code duplication.\n
            </summary>
            <details>
            \ingroup LiqMan_model
            
            A SLiquidClassBase object contains the following data:
             -  Children:				Collection of all child objects
            </details>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassBase.IsConsistent(System.Boolean)">
            <summary>
            Stub implementation
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidClassBase.Children">
            <summary>
            Get/Set the Children of the SLiquidClassBase
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.#ctor(Sias.LiquidManager.SLiquidClass)">
            <summary>
            Creates a new liquid category object and initializes the properties with the given values.
            </summary>
            <param name="liquid">Parent liquid class this category belongs to</param>
            <remarks>Throws ArgumentNullException if liquid is null}</remarks>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.#ctor(System.String,Sias.LiquidManager.STipTypeData[])">
            <summary>
            Data constructor
            The data constructor assumes that the parent member is set externally!
            </summary>
            <param name="name">Name of the liquid category</param>
            <param name="tipData">The tip type data collection</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.#ctor">
            <summary>
            Initializes a new instance of the <b>SLiquidCategory</b> class.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.Duplicate">
            <summary>
            Duplicates the current SLiquidCategory object
            </summary>
            <returns>The duplicated SLiquidCategory object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.AppendTipType(Sias.LiquidManager.STipTypeData)">
            <summary>
            Adds a given STipTypeData object to the tip type collection of the current SLiquidCategory object
            </summary>
            <param name="tipType">The STipTypeData object that should be added to the tip type collection</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.InsertTipTypeAtIndex(System.Int32,Sias.LiquidManager.STipTypeData)">
            <summary>
            Inserts a given STipTypeData object at a given index into the tip type 
            collection of the current SLiquidCategory object
            </summary>
            <param name="index">Index at which then tip type should be inserted</param>
            <param name="tipType">The STipTypeData object that should be inserted</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.RemoveTipType(Sias.LiquidManager.STipTypeData)">
            <summary>
            Removes a given STipTypeData object from the tip type collection of the
            current SLiquidCategory object
            </summary>
            <param name="tipType">The STipTypeData object that should be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.RemoveTipTypeAtIndex(System.Int32)">
            <summary>
            Removes the STipTypeData object at a given index from the tip type
            collection of the current SLiquidCategory object
            </summary>
            <param name="index">Index at which the object should be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.TipTypeCount">
            <summary>
            Returns the number of STipTypeData objects in the tip type collection of the
            current SLiquidCategory object contains
            </summary>
            <returns>Number of STipTypeData objects in the tip type collection</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.IsConsistent(System.Boolean)">
            <summary>
            Checks the integrity of the current SLiquidCategory object, including all
            STipTypeData objects contained in the STipTypeDataCollection
            </summary>
            <returns>
            true, if the current SLiquidCategory object is consistent
            false, if the current SLiquidCategory object or one of its 
            contained objects is not consistent
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.ToString">
            <summary>
            Returns a string representation of the current SLiquidCategory object
            </summary>
            <returns>String representation of the current SLiquidCategory object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.Equals(System.Object)">
            <summary>
            Checks if a given SLiquidClass object is equal to the current SLiquidClass object
            </summary>
            <param name="obj">The SLiquidClass object that should be checked for equality</param>
            <returns>
            true, if the object is equal to the current object
            false, if the object is not equal to the current object
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current SLiquidCategory.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.op_Equality(Sias.LiquidManager.SLiquidCategory,Sias.LiquidManager.SLiquidCategory)">
            <summary>Compares two SLiquidCategory objects for equality</summary>
            <param name="c1">First SLiquidCategory object</param>
            <param name="c2">Second SLiquidCategory object</param>
            <returns>true if both objects contain the same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategory.op_Inequality(Sias.LiquidManager.SLiquidCategory,Sias.LiquidManager.SLiquidCategory)">
            <summary>Compares two SLiquidCategory objects for inequality</summary>
            <param name="c1">First SLiquidCategory object</param>
            <param name="c2">Second SLiquidCategory object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidCategory.Name">
            <summary>
            Name of the liquid category
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidCategory.ImageIndex">
            <summary>
            Index of the image in the image collection of the SLiquidManager, 
            used for the visual representation of the liquid category
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidCategory.TipTypes">
            <summary>
            List of all tip types this liquid category contains
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidCategory.Parent">
            <summary>
            Parent SLiquidClass object of this SLiquidCategory object
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.Add(Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Adds a SLiquidCategory object to the collection
            </summary>
            <param name="value">The SLiquidCategory object to be inserted</param>
            <returns>Index of the newly inserted object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.IndexOf(Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Returns the index of a given SLiquidCategory object
            </summary>
            <param name="value">The SLiquidCategory object to be looked up</param>
            <returns>Index of the given object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.Insert(System.Int32,Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Inserts a SLiquidCategory object into the collection at a given index
            </summary>
            <param name="index">Index at which the object should be inserted</param>
            <param name="value">The SLiquidCategory object to be inserted</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.Remove(Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Removes a SLiquidCategory object from the collection
            </summary>
            <param name="value">The SLiquidCategory object to be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.Contains(Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Checks if a given SLiquidCategory object exists in the collection
            </summary>
            <param name="value">The SLiquidCategory object to be looked up</param>
            <returns>
            true, if the object is in the collection
            false, if the object is not in the collection
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.OnValidate(System.Object)">
            <summary>
            Validates the type of the object that should be inserted
            </summary>
            <param name="value">Object whose type should be validated</param>
            <remarks>An ArgumentException is thrown if object is not of type SLiquidCategory</remarks>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.Equals(System.Object)">
            <summary>
            Checks if a given SLiquidCategoryCollection is equal to the current SLiquidCategoryCollection
            </summary>
            <param name="obj">The SLiquidCategoryCollection object whose equality should be checked</param>
            <returns>
            true, if the two objects are the same
            false, if the two objects are not the same</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current SLiquidCategoryCollection.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.op_Equality(Sias.LiquidManager.SLiquidCategoryCollection,Sias.LiquidManager.SLiquidCategoryCollection)">
            <summary>Compares two SLiquidCategoryCollection object for equality.</summary>
            <param name="c1">First SLiquidCategoryCollection object</param>
            <param name="c2">Second SLiquidCategoryCollection object</param>
            <returns>true if both collections contain the same objects, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.op_Inequality(Sias.LiquidManager.SLiquidCategoryCollection,Sias.LiquidManager.SLiquidCategoryCollection)">
            <summary>Compares two SLiquidCategoryCollection objects for inequality</summary>
            <param name="c1">First SLiquidCategoryCollection object</param>
            <param name="c2">Second SLiquidCategoryCollection object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.IsConsistent">
            <summary>
            Checks the integrity of all SLiquidCategory objects in the current SLiquidCategoryCollection
            </summary>
            <returns>
            true, if the current SLiquidCategoryCollection is consistent
            false, if the current SLiquidCategoryCollection or one of its contained objects is not consistent
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidCategoryCollection.Clone">
            <summary>
            Creates a new SLiquidCategoryCollection object as a copy of the current
            SLiquidCategoryCollection object
            </summary>
            <returns>Copy of the current SLiquidCategoryCollection object</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidCategoryCollection.Item(System.String)">
            <summary>
            Indexer. Gets the SLiquidCategory object with the given name. If the name 
            can not be found in the collection, the indexer will return null.
            </summary>
            <param name="name">Name of the desired liquid category</param>
            <returns>The SLiquidCategory object with the given name or null if the
            given name does not exist in the collection.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidCategoryCollection.Item(System.Int32)">
            <summary>
            Indexer. Gets or sets the SLiquidCategory object at the given index. If the index 
            is not within the bounds of the collection the get indexer will return null
            and the set indexer will do nothing.
            </summary>
            <param name="index">Index of the liquid category</param>
            <returns>The SLiquidCategory at the given index or null if the index is out of bounds</returns>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidClassControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            	
        </member>
        <member name="T:Sias.LiquidManager.SVolumeBand">
            <summary>
            The SVolumeBand object represents a volume range for which liquid parameters have been
            defined.
            </summary>
            <details>
            \ingroup LiqMan_model
            
            A volume band object contains the following data: 
             - AspirateParameters:	SAspirateParameters object containing the parameters defined 
            						for this volume range 
             - DispenseParameters:	SDispenseParameters object containing the parameters defined 
            						for this volume range 
             - MinVolume:			Lower limit of the volume range 
             - MaxVolume:			Upper limit of the volume range 
            </details>
        </member>
        <member name="F:Sias.LiquidManager.SVolumeBand.spitBack">
            <summary>Spit back volume field</summary>
        </member>
        <member name="F:Sias.LiquidManager.SVolumeBand.wasteVolume">
            <summary>Waste volume field</summary>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBand.#ctor(System.Double,System.Double,Sias.LiquidManager.SAirgap,Sias.LiquidManager.SAirgap,Sias.LiquidManager.SAirgap,System.Double,System.Double,Sias.LiquidManager.SCorrectedPrecisionParameters,Sias.LiquidManager.SCorrectedPrecisionParameters,System.Boolean)">
            <summary>
            Initializes a new instance of the <b>SVolumeBand</b> class.
            </summary>
            <param name="min">Lower limit of volume band</param>
            <param name="max">Upper limit of volume band</param>
            <param name="sysAir">Air gap to system liquid</param>
            <param name="sepAir">Separation Air gap to upper liquid</param>
            <param name="transAir">Transportation Air gap</param>
            <param name="spit">Spit Back volume</param>
            <param name="waste">Waste volume</param>
            <param name="aspParam">Aspiration parameters</param>
            <param name="dispParam">Dispense parameters</param>
            <param name="retakeAirgap">ReTake Air gap flag</param>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBand.#ctor(Sias.LiquidManager.STipTypeData)">
            <summary>
            Initializes a new instance of the <b>SVolumeBand</b> class.
            </summary>
            <param name="tipType">The parent tip type of this object</param>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBand.#ctor">
            <summary>
            Initializes a new instance of the <b>SVolumeBand</b> class.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBand.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current SVolumeBand.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBand.op_Equality(Sias.LiquidManager.SVolumeBand,Sias.LiquidManager.SVolumeBand)">
            <summary>Compares two SVolumeBand objects for equality</summary>
            <param name="vb1">First SVolumeBand object</param>
            <param name="vb2">Second SVolumeBand object</param>
            <returns>true if both objects contain the same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBand.op_Inequality(Sias.LiquidManager.SVolumeBand,Sias.LiquidManager.SVolumeBand)">
            <summary>Compares two SVolumeBand objects for unequality</summary>
            <param name="vb1">First SVolumeBand object</param>
            <param name="vb2">Second SVolumeBand object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.MinVolume">
            <summary>Lower limit of volume range property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.MaxVolume">
            <summary>Upper limit of volume range property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.SystemAirgap">
            <summary>Air gap to system liquid property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.SeparationAirgap">
            <summary>Separation air gap in µl property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.TransportationAirgap">
            <summary>Transportation air gap in µl property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.SpitBack">
            <summary>Spit back volume property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.WasteVolume">
            <summary>Waste volume property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.AspirateParameter">
            <summary>
            Get/Set the AspirateParameter of the SVolumeBand
            </summary>
            <value></value>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.DispenseParameter">
            <summary>
            Get/Set the DispenseParameter of the SVolumeBand
            </summary>
            <value></value>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBand.RetakeTransportationAirgap">
            <summary>
            Retake transportation Air gap after dispense
            </summary>
        </member>
        <member name="T:Sias.LiquidManager.SVolumeBandCollection">
            <summary>
            Collection of SVolumeBand objects 
            </summary>
            <details>
            \ingroup LiqMan_model
            </details>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.Add(Sias.LiquidManager.SVolumeBand)">
            <summary>
            Adds a SVolumeBand object to the collection
            </summary>
            <param name="value">The SVolumeBand object to be inserted</param>
            <returns>Index of the newly inserted object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.IndexOf(Sias.LiquidManager.SVolumeBand)">
            <summary>
            Returns the index of a given SVolumeBand object
            </summary>
            <param name="value">The SVolumeBand object to be looked up</param>
            <returns>Index of the given object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.Insert(System.Int32,Sias.LiquidManager.SVolumeBand)">
            <summary>
            Inserts a SVolumeBand object into the collection at a given index
            </summary>
            <param name="index">Index at which the object should be inserted</param>
            <param name="value">The SVolumeBand object to be inserted</param>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.Remove(Sias.LiquidManager.SVolumeBand)">
            <summary>
            Removes a SVolumeBand object from the collection
            </summary>
            <param name="value">The SVolumeBand object to be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.Contains(Sias.LiquidManager.SVolumeBand)">
            <summary>
            Checks if a given SVolumeBand object exists in the collection
            </summary>
            <param name="value">The SVolumeBand object to be looked up</param>
            <returns>
            true, if the object is in the collection
            false, if the object is not in the collection
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.OnValidate(System.Object)">
            <summary>
            Validates the type of the object that should be inserted
            </summary>
            <param name="value">Object whose type should be validated</param>
            <remarks>An ArgumentException is thrown if object is not of type SLiquidCategory</remarks>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.Equals(System.Object)">
            <summary>
            Checks if a given SVolumeBandollection is equal to the current SVolumeBandCollection
            </summary>
            <param name="obj">The SVolumeBandCollection object whose equality should be checked</param>
            <returns>
            true, if the two objects are the same
            false, if the two objects are not the same</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current SVolumeBandCollection.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.op_Equality(Sias.LiquidManager.SVolumeBandCollection,Sias.LiquidManager.SVolumeBandCollection)">
            <summary>Compares two SVolumeBandCollection object for equality.</summary>
            <param name="c1">First SVolumeBandCollection object</param>
            <param name="c2">Second SVolumeBandCollection object</param>
            <returns>true if both collections contain the same objects, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.op_Inequality(Sias.LiquidManager.SVolumeBandCollection,Sias.LiquidManager.SVolumeBandCollection)">
            <summary>Compares two SVolumeBandCollection objects for unequality</summary>
            <param name="c1">First SVolumeBandCollection object</param>
            <param name="c2">Second SVolumeBandCollection object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.IsConsistent">
            <summary>
            Checks the integrity of all SVolumeBand objects in the current SVolumeBandCollection
            </summary>
            <returns>
            true, if the current SVolumeBandCollection is consistent
            false, if the current SVolumeBandCollection or one of its contained objects is not consistent
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SVolumeBandCollection.Clone">
            <summary>
            Creates a new SVolumeBandCollection object as a copy of the current
            SVolumeBandCollection object
            </summary>
            <returns>Copy of the current SVolumeBandCollection object</returns>
        </member>
        <member name="P:Sias.LiquidManager.SVolumeBandCollection.Item(System.Int32)">
            <summary>
            Indexer. Gets or sets the SVolumeBand object at the given index. If the index 
            is not within the bounds of the collection the get indexer will return null
            and the set indexer will do nothing.
            </summary>
            <param name="index">Index of the volume band</param>
            <returns>The SVolumeBand at the given index or null if the index is out of bounds</returns>
        </member>
        <member name="T:Sias.LiquidManager.VolumeBandCollectionAddedEventArgs">
            <summary>
            Event arguments class for the VolumeBandCollectionAddedd event\n 
            </summary>
            <details>
            \ingroup LiqMan_gui
            
            The VolumeBandCollectionAddedEventArgs contains the following data:
            - VolumeBand:	The SVolumeBand object affected by the event
            </details>
        </member>
        <member name="T:Sias.LiquidManager.VolumeBandCollectionAddedEventHandler">
            <summary>
            Delegate for the VolumeBandCollectionAdded event
            </summary>
            <details>
            \ingroup LiqMan_gui
            </details>
            <param name="sender">The source of the event</param>
            <param name="e">A <see cref="T:Sias.LiquidManager.VolumeBandCollectionAddedEventArgs"/> that contains the event data</param>
        </member>
        <member name="F:Sias.LiquidManager.GUI.SSelectSubObjectDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SSelectSubObjectDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SSelectSubObjectDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidClassEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidClassEditor.AdjustButtons">
            <summary>
            Adjusts the labels of the add, insert and remove buttons according to the 
            current context.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidClassEditor.okButton_Click(System.Object,System.EventArgs)">
            <summary>
            This method is called when the okButton's Click event has been fired.
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> that fired the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> of the event.</param>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidClassEditor.cancelButton_Click(System.Object,System.EventArgs)">
            <summary>
            This method is called when the cancelButton's Click event has been fired.
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> that fired the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> of the event.</param>
        </member>
        <member name="P:Sias.LiquidManager.GUI.SLiquidClassEditor.TipManager">
            <summary>The actual tip manager property</summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidTipTypeControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="F:Sias.LiquidManager.GUI.SLiquidConsistencyWarningDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidConsistencyWarningDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidConsistencyWarningDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidClass._ImageIndex">
            <summary>Liquid image index field</summary>
        </member>
        <member name="F:Sias.LiquidManager.SLiquidClass._Categories">
            <summary>List of all liquid categories field</summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.#ctor(System.String,Sias.LiquidManager.SLiquidCategory[])">
            <summary>
            Initializes a new instance of the <b>SLiquidClass</b> class.
            </summary>
            <param name="name">Liquid class name</param>
            <param name="cats">List of categories</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>SLiquidClass</b> class.
            </summary>
            <param name="name">Liquid class name</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <b>SLiquidClass</b> class.
            </summary>
            <param name="recursive">If true, the complete liquid class structure will be created</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.Duplicate">
            <summary>
            Duplicates the current SLiquidClass object
            </summary>
            <returns>The duplicated SLiquidClass object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.AppendLiquidCategory(Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Adds a given SLiquidCategory object to the liquid category collection of the current
            SLiquidClass object
            </summary>
            <param name="category">
            The SLiquidCategory object that should be added to the liquid category collection
            </param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.InsertLiquidCategoryAtIndex(System.Int32,Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Inserts a given SLiquidCategory object at a given index into the liquid category
            collection of the current SLiquidClass object
            </summary>
            <param name="index">Index at which then liquid category should be inserted</param>
            <param name="category">The SLiquidCategory object that should be inserted</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.RemoveLiquidCategory(Sias.LiquidManager.SLiquidCategory)">
            <summary>
            Removes a given SLiquidCategory object from the liquid category collection of the
            current SLiquidClass object
            </summary>
            <param name="category">The SLiquidCategory object that should be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.RemoveLiquidCategoryAtIndex(System.Int32)">
            <summary>
            Removes the SLiquidCategory object at a given index from the liquid category
            collection of the current SLiquidClass object
            </summary>
            <param name="index">Index at which the object should be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.CategoryCount">
            <summary>
            Returns the number of SLiquidCategory objects in the liquid category collection of the
            current SLiquidClass object contains
            </summary>
            <returns>The number of SLiquidCategory objects in the liquid category collection</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.IsConsistent(System.Boolean)">
            <summary>
            Checks the integrity of the current SLiquidClass object, including all
            SLiquidCategory objects contained in the SLiquidCategoryCollection
            </summary>
            <returns>
            true, if the current SLiquidClass object is consistent
            false, if the current SLiquidClass object or one of its contained objects is not consistent
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.ToString">
            <summary>
            Returns a string representation of the current SLiquidClass object
            </summary>
            <returns>String representation of the current SLiquidClass object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.Equals(System.Object)">
            <summary>
            Checks if a given SLiquidClass object is equal to the current SLiquidClass object
            </summary>
            <param name="obj">The SLiquidClass object that should be checked for equality</param>
            <returns>
            true, if the object is equal to the current object
            false, if the object is not equal to the current object
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current SLiquidClass.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.op_Equality(Sias.LiquidManager.SLiquidClass,Sias.LiquidManager.SLiquidClass)">
            <summary>Compares two SLiquidClass objects for equality</summary>
            <param name="c1">First SLiquidClass object</param>
            <param name="c2">Second SLiquidClass object</param>
            <returns>true if both objects contain the same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.op_Inequality(Sias.LiquidManager.SLiquidClass,Sias.LiquidManager.SLiquidClass)">
            <summary>Compares two SLiquidClass objects for inequality</summary>
            <param name="c1">First SLiquidClass object</param>
            <param name="c2">Second SLiquidClass object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClass.StoreToDB">
            <summary>
            Stores the current SLiquidClass object to the database
            </summary>
            <returns>True if the operation succeeded, otherwise false</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidClass.Name">
            <summary>Liquid class name property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidClass.ImageIndex">
            <summary>Liquid image index property</summary>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidClass.Categories">
            <summary>List of all liquid categories property</summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.Add(Sias.LiquidManager.SLiquidClass)">
            <summary>
            Adds a SLiquidClass object to the collection
            </summary>
            <param name="value">The SLiquidClass object to be inserted</param>
            <returns>Index of the newly inserted object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.IndexOf(Sias.LiquidManager.SLiquidClass)">
            <summary>
            Returns the index of a given SLiquidClass object
            </summary>
            <param name="value">The SLiquidClass object to be looked up</param>
            <returns>Index of the given object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.Insert(System.Int32,Sias.LiquidManager.SLiquidClass)">
            <summary>
            Inserts a SLiquidClass object into the collection at a given index
            </summary>
            <param name="index">Index at which the object should be inserted</param>
            <param name="value">The SLiquidClass object to be inserted</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.Remove(Sias.LiquidManager.SLiquidClass)">
            <summary>
            Removes a SLiquidClass object from the collection
            </summary>
            <param name="value">The SLiquidClass object to be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.Contains(Sias.LiquidManager.SLiquidClass)">
            <summary>
            Checks if a given SLiquidClass object exists in the collection
            </summary>
            <param name="value">The SLiquidClass object to be looked up</param>
            <returns>
            true, if the object is in the collection
            false, if the object is not in the collection
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.OnValidate(System.Object)">
            <summary>
            Validates the type of the object that should be inserted
            </summary>
            <param name="value">Object whose type should be validated</param>
            <remarks>An ArgumentException is thrown if object is not of type SLiquidClass</remarks>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current SLiquidClassCollection.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.op_Equality(Sias.LiquidManager.SLiquidClassCollection,Sias.LiquidManager.SLiquidClassCollection)">
            <summary>Compares two SLiquidClassCollection object for equality.</summary>
            <param name="c1">First SLiquidClassCollection object</param>
            <param name="c2">Second SLiquidClassCollection object</param>
            <returns>true if both collections contain the same objects, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassCollection.op_Inequality(Sias.LiquidManager.SLiquidClassCollection,Sias.LiquidManager.SLiquidClassCollection)">
            <summary>Compares two SLiquidClassCollection objects for unequality</summary>
            <param name="c1">First SLiquidClassCollection object</param>
            <param name="c2">Second SLiquidClassCollection object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidClassCollection.Item(System.String)">
            <summary>
            Indexer. Gets the SLiquidClass object with the given name. If the name
            can not be found in the collection, the indexer will return null.
            </summary>
            <param name="name">Name of the desired liquid class</param>
            <returns>The SLiquidClass object with the given name or null if the
            given name does not exist in the collection.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidClassCollection.Item(System.Int32)">
            <summary>
            Indexer. Gets or sets the SLiquidClass object at the given index. If the index 
            is not within the bounds of the collection the get indexer will return null
            and the set indexer will do nothing.
            </summary>
            <param name="index">Index of the liquid class</param>
            <returns>The SLiquidClass at the given index or null if the index is out of bounds</returns>
        </member>
        <member name="T:Sias.LiquidManager.SPrecisionParameters">
            <summary>
            Pipetting parameters
            </summary>
            <details>
            \ingroup LiqMan_model
            
            A precision parameters object contains the following data: 
             - Speed:	    Aspiration/dispense speed in [µl/s]
             - Ramp:	    Aspiration/dispense ramp in [µl/s^2]
             - Delay:       Delay after aspiration/dispense in [ms] 
             - StopSpeed:	Aspiration/dispense stop speed in [µl/s]
            </details>
        </member>
        <member name="M:Sias.LiquidManager.SPrecisionParameters.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:Sias.LiquidManager.SPrecisionParameters.#ctor(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Creates a new SPrecisionParameters object and initializes the properties with the given values.
            </summary>
            <param name="speed">Speed [µl/s]</param>
            <param name="ramp">Ramp in [µl/s^2]</param>
            <param name="delay">Delay in [ms]</param>
            <param name="stopSpeed">Stop speed in [µl/s]</param>
        </member>
        <member name="M:Sias.LiquidManager.SPrecisionParameters.Equals(System.Object)">
            <summary>Compares an object to this SPrecisionParameters object</summary>
            <param name="obj">The object to compare</param>
            <returns>true, if the object is the same as this object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SPrecisionParameters.GetHashCode">
            <summary>overwrite GetHashcode to avoid warning</summary>
            <returns>hash code</returns>
        </member>
        <member name="M:Sias.LiquidManager.SPrecisionParameters.op_Equality(Sias.LiquidManager.SPrecisionParameters,Sias.LiquidManager.SPrecisionParameters)">
            <summary>Compares two SPrecisionParameter objects for equality</summary>
            <param name="pp1">First SPrecisionParameter object</param>
            <param name="pp2">Second SPrecisionParameter object</param>
            <returns>true if both objects contain the same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SPrecisionParameters.op_Inequality(Sias.LiquidManager.SPrecisionParameters,Sias.LiquidManager.SPrecisionParameters)">
            <summary>Compares two SPrecisionParameters objects for unequality</summary>
            <param name="pp1">First SPrecisionParameters object</param>
            <param name="pp2">Second SPrecisionParameters object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SPrecisionParameters.Speed">
            <summary>Volume speed</summary>
        </member>
        <member name="P:Sias.LiquidManager.SPrecisionParameters.Ramp">
            <summary>Volume ramp</summary>
        </member>
        <member name="P:Sias.LiquidManager.SPrecisionParameters.Delay">
            <summary>Delay after aspiration/dispense</summary>
        </member>
        <member name="P:Sias.LiquidManager.SPrecisionParameters.StopSpeed">
            <summary>Speed at which the motor stops dispensing/aspirating</summary>
        </member>
        <member name="T:Sias.LiquidManager.SCorrectedPrecisionParameters">
            <summary>
            Correction parameters for volume scaling
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SCorrectedPrecisionParameters.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:Sias.LiquidManager.SCorrectedPrecisionParameters.#ctor(System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new SCorrectedPrecisionParameters object and initializes the properties with the given values.
            </summary>
            <param name="speed">Speed µl/s</param>
            <param name="ramp">Ramp in µl/s^2</param>
            <param name="delay">Delay in ms</param>
            <param name="stopSpeed">Stop speed in µl/s</param>
            <param name="offset">Offset</param>
            <param name="factor">Factor</param>
        </member>
        <member name="M:Sias.LiquidManager.SCorrectedPrecisionParameters.Equals(System.Object)">
            <summary>Compares an object to this SCorrectedPrecisionParameters object</summary>
            <param name="obj">The object to compare</param>
            <returns>true, if the object is the same as this object</returns>
        </member>
        <member name="M:Sias.LiquidManager.SCorrectedPrecisionParameters.GetHashCode">
            <summary>overwrite GetHashcode to avoid warning</summary>
            <returns>hash code</returns>
        </member>
        <member name="M:Sias.LiquidManager.SCorrectedPrecisionParameters.op_Equality(Sias.LiquidManager.SCorrectedPrecisionParameters,Sias.LiquidManager.SCorrectedPrecisionParameters)">
            <summary>Compares two SCorrectedPrecisionParameters objects for equality</summary>
            <param name="pp1">First SCorrectedPrecisionParameters object</param>
            <param name="pp2">Second SCorrectedPrecisionParameters object</param>
            <returns>true if both objects contain the same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.SCorrectedPrecisionParameters.op_Inequality(Sias.LiquidManager.SCorrectedPrecisionParameters,Sias.LiquidManager.SCorrectedPrecisionParameters)">
            <summary>Compares two SCorrectedPrecisionParameters objects for unequality</summary>
            <param name="pp1">First SCorrectedPrecisionParameters object</param>
            <param name="pp2">Second SCorrectedPrecisionParameters object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SCorrectedPrecisionParameters.Offset">
            <summary>Scaling offset for the motor</summary>
        </member>
        <member name="P:Sias.LiquidManager.SCorrectedPrecisionParameters.Factor">
            <summary>Scaling factor for the motor</summary>
        </member>
        <member name="T:Sias.LiquidManager.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Sias.LiquidManager.STipTypeData">
            <summary>
            The STipTypeData object represents a tip type in the Nelson environment.
            Tip types are used to structure the liquid classes.
            </summary>
            <details>
            \ingroup LiqMan_model
            
            A liquid category object contains the following data:
             - TipType:		A STipTypeTemplate object containing the data about this tip kind
             - VolumeBands:	SVolumeBandCollectio object containing all the SVolumeBand objects
            					that are defined for this tip type.
            </details>
        </member>
        <member name="F:Sias.LiquidManager.STipTypeData._Comment">
            <summary>Tip type data description field</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipTypeData.ActualTipType">
            <summary>Base tip type field</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipTypeData._ImageIndex">
            <summary>Tip data image index field</summary>
        </member>
        <member name="F:Sias.LiquidManager.STipTypeData._VolumeBands">
            <summary>Volume band collection field</summary>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeData.#ctor(System.String,Sias.LiquidManager.SVolumeBand[])">
            <summary>
            Initializes a new instance of the <b>STipTypeData</b> class.
            </summary>
            <param name="TipTypeName">Name of the corresponding tip type</param>
            <param name="bands">List of volume bands</param>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeData.#ctor(Sias.LiquidManager.SLiquidCategory,System.String)">
            <summary>
            Initializes a new instance of the <b>STipTypeData</b> class.
            </summary>
            <param name="category">The parent liquid category of this object</param>
            <param name="tipName">The name of the tip type (should be found from tip manager at runtime)</param>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeData.#ctor">
            <summary>
            Initializes a new instance of the <b>STipTypeData</b> class.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeData.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current STipTypeData.</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeData.op_Equality(Sias.LiquidManager.STipTypeData,Sias.LiquidManager.STipTypeData)">
            <summary>Compares two STipTypeData objects for equality</summary>
            <param name="t1">First STipTypeData object</param>
            <param name="t2">Second STipTypeData object</param>
            <returns>true if both objects contain the same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeData.op_Inequality(Sias.LiquidManager.STipTypeData,Sias.LiquidManager.STipTypeData)">
            <summary>Compares two STipTypeData objects for unequality</summary>
            <param name="t1">First STipTypeData object</param>
            <param name="t2">Second STipTypeData object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeData.GetVolumeBand(System.Double)">
            <summary>
            Get the volume band for the given volume.
            </summary>
            <param name="Volume">The Volume for the requested volume band</param>
            <returns>The requested volume band or null if there is no volume band for the volume</returns>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeData.Comment">
            <summary>Tip type data description property</summary>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeData.TipType">
            <summary>
            Base tip type property
            
            The base tip type will get stored as a copy in tip type data.
            If the tip manager actually has a corresponding tip type the tip 
            type data is taken from there. It not the last known tip type
            information is used (from backup).
            </summary>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeData.ImageIndex">
            <summary>Tip data image index property</summary>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeData.VolumeBands">
            <summary>Volume band collection property</summary>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeData.Name">
            <summary>Name of tip type data object property</summary>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeData.MaxVolume">
            <summary>Maximum allowed volume property</summary>
        </member>
        <member name="T:Sias.LiquidManager.STipTypeDataCollection">
            <summary>
            Collection of STipTypeData objects 
            </summary>
            <details>\ingroup LiqMan_model</details>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.Add(Sias.LiquidManager.STipTypeData)">
            <summary>
            Adds a STipTypeData object to the collection
            </summary>
            <param name="value">The STipTypeData object to be inserted</param>
            <returns>Index of the newly inserted object</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.IndexOf(Sias.LiquidManager.STipTypeData)">
            <summary>
            Returns the index of a given STipTypeData object
            </summary>
            <param name="value">The STipTypeData object to be looked up</param>
            <returns>Index of the given object</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.Insert(System.Int32,Sias.LiquidManager.STipTypeData)">
            <summary>
            Inserts a STipTypeData object into the collection at a given index
            </summary>
            <param name="index">Index at which the object should be inserted</param>
            <param name="value">The STipTypeData object to be inserted</param>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.Remove(Sias.LiquidManager.STipTypeData)">
            <summary>
            Removes a STipTypeData object from the collection
            </summary>
            <param name="value">The STipTypeData object to be removed</param>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.Contains(Sias.LiquidManager.STipTypeData)">
            <summary>
            Checks if a given STipTypeData object exists in the collection
            </summary>
            <param name="value">The STipTypeData object to be looked up</param>
            <returns>
            true, if the object is in the collection
            false, if the object is not in the collection
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.OnValidate(System.Object)">
            <summary>
            Validates the type of the object that should be inserted
            </summary>
            <param name="value">Object whose type should be validated</param>
            <remarks>An ArgumentException is thrown if object is not of type SLiquidCategory</remarks>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.Equals(System.Object)">
            <summary>
            Checks if a given STipTypeDataCollection is equal to the current STipTypeDataCollection
            </summary>
            <param name="obj">The STipTypeDataCollection object whose equality should be checked</param>
            <returns>
            true, if the two objects are the same
            false, if the two objects are not the same</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current STipTypeDataCollection.</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.op_Equality(Sias.LiquidManager.STipTypeDataCollection,Sias.LiquidManager.STipTypeDataCollection)">
            <summary>Compares two STipTypeDataCollection object for equality.</summary>
            <param name="c1">First STipTypeDataCollection object</param>
            <param name="c2">Second STipTypeDataCollection object</param>
            <returns>true if both collections contain the same objects, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.op_Inequality(Sias.LiquidManager.STipTypeDataCollection,Sias.LiquidManager.STipTypeDataCollection)">
            <summary>Compares two STipTypeDataCollection objects for unequality</summary>
            <param name="c1">First STipTypeDataCollection object</param>
            <param name="c2">Second STipTypeDataCollection object</param>
            <returns>true if both objects contain the not same values, false otherwise.</returns>
        </member>
        <member name="M:Sias.LiquidManager.STipTypeDataCollection.IsConsistent">
            <summary>
            Checks the integrity of all STipTypeData objects in the current STipTypeDataCollection
            </summary>
            <returns>
            true, if the current STipTypeDataCollection is consistent
            false, if the current STipTypeDataCollection or one of its contained objects is not consistent
            </returns>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeDataCollection.Item(System.String)">
            <summary>
            Indexer. Gets the STipTypeData object with the given name. If the name 
            can not be found in the collection, the indexer will return null.
            </summary>
            <param name="name">Name of the desired tip type data</param>
            <returns>The STipTypeData object with the given name or null if the
            given name does not exist in the collection.</returns>
        </member>
        <member name="P:Sias.LiquidManager.STipTypeDataCollection.Item(System.Int32)">
            <summary>
            Indexer. Gets or sets the STipTypeData object at the given index. If the index 
            is not within the bounds of the collection the get indexer will return null
            and the set indexer will do nothing.
            </summary>
            <param name="index">Index of the tip type data</param>
            <returns>The STipTypeData at the given index or null if the index is out of bounds</returns>
        </member>
        <member name="T:Sias.LiquidManager.TipTypeCollectionAddedEventArgs">
            <summary>
            Event arguments class for the TipTypeCollectionAddedd event.
            </summary>
            <details>
            \ingroup LiqMan_gui
            
            The TipTypeCollectionAddedEventArgs contains the following data:
            - TipType:	The STipTypeData object affected by the event
            </details>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidEditor.AdjustButtons">
            <summary>
            Adjusts the labels of the add, insert and remove buttons according to the 
            current context.
            </summary>
        </member>
        <member name="F:Sias.LiquidManager.GUI.SLiquidEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SVolumeBandControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SVolumeBandControl.ReadFields">
            Reads the fields of the aspiration/dispense tabs and assigns the values
            to the respective objects
        </member>
        <member name="T:Sias.LiquidManager.InconsistencyDetectedEventArgs">
            <summary>
            Event arguments class for the InconsistencyDetected event\n
            </summary>
            <details>
            \ingroup LiqMan_gui 
            
             The InconsistencyDetectedEventArgs contains the following data:
             - Object:	The object that caused the event
             - Error:   The consistency error enumerator value (\b see SConsistencyErrors)
            </details>
        </member>
        <member name="T:Sias.LiquidManager.InconsistencyDetectedEventHandler">
            <summary>
            Delegate for the InconsistencyDetected event
            </summary>
            <details>
            \ingroup LiqMan_gui
            </details>
            <param name="sender">The source of the event</param>
            <param name="e">
            A <see cref="T:Sias.LiquidManager.InconsistencyDetectedEventArgs"/> that contains the appropriate 
            SLiquidClassBase object and SConsistencyError event data
            </param>
        </member>
        <member name="T:Sias.LiquidManager.SLiquidClassBaseCollection">
            <summary>
            Collection of SLiquidClassBase objects
            </summary>
            <details>
            \ingroup LiqMan_model
            </details>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassBaseCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassBaseCollection.Equals(System.Object)">
            <summary>
            Checks if a given SLiquidClassBaseCollection is equal to the current SLiquidClassBaseCollection
            </summary>
            <param name="obj">The SLiquidClassBaseCollection object whose equality should be checked</param>
            <returns>
            true, if the two objects are the same
            false, if the two objects are not the same
            </returns>
        </member>
        <member name="M:Sias.LiquidManager.SLiquidClassBaseCollection.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current SLiquidClassBaseCollection.</returns>
        </member>
        <member name="P:Sias.LiquidManager.SLiquidClassBaseCollection.Item(System.Int32)">
            <summary>
            Gets or sets the SLiquidClassBase object at the specified index. 
            </summary>
        </member>
        <member name="F:Sias.LiquidManager.GUI.SConfirmationDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SConfirmationDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SConfirmationDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sias.LiquidManager.SAirgap">
            <summary>
            Precision parameters needed for air gap handling
            </summary>
            <details>
            \ingroup LiqMan_model
            
            An air gap object contains the following data: 
             - Speed:	    Aspiration/dispense speed in [µl/s]
             - Ramp:	    Aspiration/dispense ramp in [µl/s^2]
             - Delay:       Delay after aspiration/dispense in [ms] 
             - StopSpeed:	Aspiration/dispense stop speed in [µl/s]
             - Volume:      Volume in [µl]
            </details>
        </member>
        <member name="M:Sias.LiquidManager.SAirgap.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.SAirgap.#ctor(System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Creates a new SAirgap object and initializes the properties with the given values.
            </summary>
            <param name="speed">Speed [µl/s]</param>
            <param name="ramp">Ramp in [µl/s^2]</param>
            <param name="delay">Delay in [ms]</param>
            <param name="stopSpeed">Stop speed in [µl/s]</param>
            <param name="volume">Volume in [µl]</param>
        </member>
        <member name="M:Sias.LiquidManager.SAirgap.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new SAirgap object and initializes the properties with the given values.
            </summary>
            <param name="speed">Speed [µl/s]</param>
            <param name="ramp">Ramp in [µl/s^2]</param>
            <param name="volume">Volume in [µl]</param>
        </member>
        <member name="P:Sias.LiquidManager.SAirgap.Volume">
            <summary>Volume</summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidCategoryControl.OnLiquidCategoryChanged(Sias.LiquidManager.GUI.LiquidCategoryChangedEventArgs)">
            Event handler for the LiquidCategoryChanged event
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidCategoryControl.#ctor">
            Creates a new SLiquidCategoryControl object
            
            \return		The newly created SLiquidCategoryControl object
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidCategoryControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Sias.LiquidManager.GUI.SLiquidCategoryControl.ValueIsValid(System.String)">
            Checks whether a given string is valid (as Name for the liquid category)
            or not. A string is considered a valid name if it is not empty and
            not equal to any other name in the names list.
            
            \param	aText	The string that should be validated
            
            \return	true	If the given string is valid
            \return	false	If the given string is not valid
        </member>
        <member name="E:Sias.LiquidManager.GUI.SLiquidCategoryControl.LiquidCategoryChanged">
            Event that is raised then the liquid category edited in this control
            gets changed.
        </member>
        <member name="P:Sias.LiquidManager.GUI.SLiquidCategoryControl.LiquidCategory">
            The SLiquidCategory object whose data is displayed in the control
        </member>
        <member name="P:Sias.LiquidManager.GUI.SLiquidCategoryControl.Names">
            List of names of liquid categories. Used for consistency checks
        </member>
        <member name="T:Sias.LiquidManager.GUI.LiquidCategoryChangedEventArgs">
            \ingroup LiqMan_gui
            Event arguments class for the LiquidCategoryChanged event\n
            The LiquidCategoryChangedEventArgs contains the following data:
            - LiquidCategory:	The SLiquidCategory object affected by the event
        </member>
        <member name="M:Sias.LiquidManager.GUI.LiquidCategoryChangedEventArgs.#ctor(Sias.LiquidManager.SLiquidCategory)">
            Creates a new LiquidCategoryChangedEventArgs object
            
            \param	lc	The liquid class related to the event
            
            \return		The newly created LiquidCategoryChangedEventArgs object
        </member>
        <member name="P:Sias.LiquidManager.GUI.LiquidCategoryChangedEventArgs.LiquidCategory">
            The liquid class related to the event
        </member>
        <member name="T:Sias.LiquidManager.GUI.LiquidCategoryChangedEventHandler">
             \ingroup LiqMan_gui
             Delegate for the LiquidCategoryChanged event
             
             \param	sender	The object sending the event
             \param	e		LiquidCategoryChangedEventArgs object containing the appropriate
            					SLiquidCategory object
        </member>
    </members>
</doc>
